name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크 아웃 (GitHub Action의 가상 머신으로 Repository의 최신 코드 pull)
    - name: Checkout code
      uses: actions/checkout@v2

      # JDK 설치
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

      # Gradle 빌드
    - name: Build with Gradle
      working-directory: backend
      run: ./gradlew build

      # Docker Hub 로그인
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 프로젝트의 도커 빌드
    - name: Build Docker image
      working-directory: backend
      run: docker build -t gangeunlee/moneyminder-backend:${{ github.sha }} .

      # Docker Hub로 빌드 이미지 푸쉬
    - name: Push Docker image
      working-directory: backend
      run: docker push gangeunlee/moneyminder-backend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # SSH 키 파일 생성
      - name: Create SSH key file
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # docker-compose.yml 파일을 EC2로 전송
      - name: Copy docker-compose.yml to EC2
        run: scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa backend/docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/docker-compose.yml

      # AWS 배포
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/${{ secrets.EC2_USER }}
            sudo docker-compose down
            sudo docker-compose up -d
