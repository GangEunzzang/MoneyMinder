name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크 아웃 (GitHub Action의 가상 머신으로 Repository의 최신 코드 pull)
    - name: Checkout code
      uses: actions/checkout@v2

      # JDK 설치
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

      # Gradle 빌드
    - name: Build with Gradle
      working-directory: backend
      run: ./gradlew build

      # Docker Hub 로그인
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 프로젝트의 도커 빌드
    - name: Build Docker image
      working-directory: backend
      run: docker build --platform linux/amd64 -t gangeunlee/moneyminder-backend:latest .
     
      # Docker Hub로 빌드 이미지 푸쉬
    - name: Push Docker image
      working-directory: backend
      run: docker push gangeunlee/moneyminder-backend:latest 

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # 도커 컴포즈 설정 파일 서버로 전달
      - name: Send docker-compose.yml
        uses: appleboy/scp-action@master
        with:
          username: ec2-user
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "backend/docker-compose.yml"
          target: "/home/ec2-user/"

      # 프로테메우스 설정 파일 서버로 전달
      - name: Send prometheus.yml 
        uses: appleboy/scp-actionv@0.1.6
        with:
          username: ec2-user
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "backend/prometheus.yml"
          target: "/home/ec2-user/"

      # AWS 배포
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PUB_SSH_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.EC2_USER }}
            sudo docker-compose down
            sudo docker-compose up -d
