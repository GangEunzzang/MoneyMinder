name: BE CI/CD Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    if: startsWith(github.event.head_commit.message, '[BE]')
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      # (선택) Gradle 캐싱
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Gradle 빌드
        working-directory: backend
        run: ./gradlew build

      # SonarQube 분석 단계 추가
      - name: SonarQube 분석
        working-directory: backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew clean test jacocoTestReport 
          ./gradlew sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 백엔드 Docker 이미지 빌드 및 푸쉬
        run: |
          docker build --platform linux/amd64 -t gangeunlee/moneyminder-backend:latest -f config/deploy/be-Dockerfile .
          docker push gangeunlee/moneyminder-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v2

      - name: 파일 전송
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.EC2_USER }}
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: config/deploy
          target: /home/${{ secrets.EC2_USER }}/moneyminder/

      - name: EC2에 환경변수 파일 생성 및 deploy.sh 파일 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.EC2_USER }}/moneyminder/config/deploy
            
            # 환경 변수 설정 파일 생성
            echo "SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}" > .env
            echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> .env
            echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> .env
            echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> .env
            echo "SPRING_REDIS_HOST=${{ secrets.SPRING_REDIS_HOST }}" >> .env
            echo "SPRING_REDIS_PORT=${{ secrets.SPRING_REDIS_PORT }}" >> .env
            echo "GOOGLE_OAUTH2_CLIENT_ID=${{ secrets.GOOGLE_OAUTH2_CLIENT_ID }}" >> .env
            echo "GOOGLE_OAUTH2_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH2_CLIENT_SECRET }}" >> .env
            echo "NAVER_OAUTH2_CLIENT_ID=${{ secrets.NAVER_OAUTH2_CLIENT_ID }}" >> .env
            echo "NAVER_OAUTH2_CLIENT_SECRET=${{ secrets.NAVER_OAUTH2_CLIENT_SECRET }}" >> .env
            echo "AUTH_TOKEN_SECRET_KEY=${{ secrets.AUTH_TOKEN_SECRET_KEY }}" >> .env
            echo "MAIL_USER_NAME=${{ secrets.MAIL_USER_NAME }}" >> .env
            echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
            
            # deploy.sh 실행
            chmod +x deploy.sh
            ./deploy.sh
